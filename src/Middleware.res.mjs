// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Server from "next/server";
import * as PathRewriter from "./middleware/PathRewriter.res.mjs";

var registry = [PathRewriter.middleware];

async function middleware(request) {
  var value;
  for(var i = 0 ,i_finish = registry.length; i < i_finish; ++i){
    if (value === undefined) {
      var entry = registry[i];
      value = await entry.handler(request);
    }
    
  }
  var res = value;
  if (res !== undefined) {
    return Caml_option.valFromOption(res);
  } else {
    return Server.NextResponse.next();
  }
}

var config = {
  matcher: registry.map(function (v) {
          return v.config.matcher;
        }).reduce((function (acc, i) {
          return Belt_Array.concatMany([
                      acc,
                      i
                    ]);
        }), [])
};

export {
  middleware ,
  config ,
}
/* config Not a pure module */
